trajectory: 
  id: traj
  translation: 
    type: bspline
    bspline:
      res: 50
      order: 3
      span_time: 3
      geometric_only: false #if true bspline will define the position only, velocity magnitude be specified as a constant, or function of time
      control_pts: 
        - [0,0,0] 
        - [0,0,0]
        - [0,0,0]
        - [3,0,0]
        - [16,-7,0]
        - [12,14,5]
        - [7,1,-1]
        - [0,10,0]
        - [-5,10,0]
        - [-3,8,0]
        - [0,0,0]
        - [0,0,0]
        - [0,0,0]
        - [0,0,0]
        - [0,0,0]
        # circle radius 10
        # - [ 10.   , 0.   , 0.]
        # - [  9.01 , 4.339, 0.]
        # - [  6.235, 7.818, 0.]
        # - [  2.225, 9.749, 0.]
        # - [ -2.225, 9.749, 0.]
        # - [ -6.235, 7.818, 0.]
        # - [ -9.01 , 4.339, 0.]
        # - [-10.   , 0.   , 0.]
        # - [ -9.01 ,-4.339, 0.]
        # - [ -6.235,-7.818, 0.]
        # - [ -2.225,-9.749, 0.]
        # - [  2.225,-9.749, 0.]
        # - [  6.235,-7.818, 0.]
        # - [  9.01 ,-4.339, 0.]
        # - [ 10.   ,-0.   , 0.]
        # - [ 10.   ,-0.   , 0.]
        # - [ 10.   ,-0.   , 0.]
  rotation: 
    type: align_axis
    align_axis:
      axis: x
      with: vel
      grounded_axis: z
      flip: true

features:
  - id: feats0
    type: point_set
    color: red
    num: 50
    center: [5,3,0]
    radius: 1
    # grid_spacing: 1 
    # normal: [0,0,1]
    # around_trajectory: false #if true, center is ignored, and radius is the  max distance from the trajectory
    # points:
      # - [5,3,0]
      # - [1,4,0]
      # - [2,2,0]

  - id: feats1
    type: point_set #random point set, planar_point_set
    num: 50
    color: purple
    center: [7,0,3]
    radius: 1
  
  - id: feats2
    type: point_set #random point set, planar_point_set
    num: 300
    center: [-3,3,0]
    radius: 2

platform:
  id: 'mono'
  base_frame: 'imu0' # the frame that will follow the trajectory
  body_frames:
    - id: test_frame
      transform: 
        rotation: [30,15,0]
        translation: [1,2,0]
  sensors:
    - id: 'imu0'
      type: 'imu'
      enable_measurements: true
      rate: 100 
      transform: 
        # from_file: 'imu_to_cam0.yaml'
        rotation: [0,0,0] #ZYX intrinsic, in degrees
        translation: [0,0,0]
      imu:
        gyro_noise: 0.001 #noise density (sigma/sqrt(Hz))
        gyro_bias: 0.0001 
        accel_noise: 0.01 
        accel_bias: 0.001
    - id: 'cam0'
      type: 'camera'
      enable_measurements: true
      rate: 25
      transform: 
        # from_file: 'imu_to_cam0.yaml'
        translation: [0.,0.,0.]
        rotation: [0,0,0] #euler fixed-axis xyz, in degrees
      camera:
        height: 480
        width: 640
        intrinsics: [200,200,320,240] #fx,fy,cx,cy
        distortion: None
          # type: 'radtan'
          # params: [0.1,0.1,0.1,0.1] #k1,k2,p1,p2

    - id: 'cam1'
      type: 'camera'
      enable_measurements: false
      rate: 25
      transform: 
        # from_file: 'imu_to_cam0.yaml'
        translation: [0,4,0]
        rotation: [65,0,0] #euler fixed-axis xyz in degrees
      camera:
        height: 1080
        width: 1920
        rate: 5 
        intrinsics: [500,500,320,240] #fx,fy,cx,cy
        distortion: None
  